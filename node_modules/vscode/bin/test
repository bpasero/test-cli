#!/usr/bin/env node

var remote = require('gulp-remote-src');
var vzip = require('gulp-vinyl-zip');
var gulp = require('gulp');
var symdest = require('gulp-symdest');

var path = require('path');
var cp = require('child_process');

gulp.task('prepare-tests-ci', function () {
    // var url = 'https://az764295.vo.msecnd.net/public/0.10.3/VSCode-darwin.zip';
    var url = process.platform === 'darwin' ? 'https://github.com/bpasero/vscode/releases/download/0.10.4/VSCode-darwin.zip' : 'https://github.com/bpasero/vscode/releases/download/0.10.4/VSCode-linux-x64.zip';

    return remote(url, { base: '' })
        .pipe(vzip.src())
        .pipe(symdest('citest'));
});

gulp.start(['prepare-tests-ci'], function () {
    var code = process.platform === 'darwin' ? path.join(process.cwd(), 'citest', 'Visual Studio Code.app', 'Contents', 'MacOS', 'Electron') : path.join(process.cwd(), 'citest', 'VSCode-linux-x64', 'Code');
    var cmd = cp.spawn(code, [
        '--extensionDevelopmentPath=' + process.cwd(),
        '--extensionTestsPath=' + path.join(process.cwd(), 'out', 'test')
    ]);

    cmd.stdout.on('data', function (data) {
        console.log(data.toString());
    });
    
    cmd.stderr.on('data', function (data) {
        console.error(data.toString());
    });
    
    cmd.on('error', function (data) {
        console.log('Failed to execute tests:');
        console.log(data.toString());
    });

    cmd.on('close', function (code) {
        console.log('Tests exited with code: ' + code);
        
        if (code) {
            process.exit(code);
        }
    });
});